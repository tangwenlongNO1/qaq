<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zenq.ssm.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.zenq.ssm.entity.Blog">
    <id column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="plate_id" jdbcType="INTEGER" property="plateId" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Base_Column_List">
    blog_id, id, plate_id, details, time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </select>
  


<select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
  </select>
  
  <select id="selectByCondition" parameterType="com.zenq.ssm.entity.Blog" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    <where>
        <if test="plateId != null">
            and plate_id=#{plateId}
        </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zenq.ssm.entity.Blog">
    insert into blog (blog_id, id, plate_id, 
      details, time)
    values (#{blogId,jdbcType=INTEGER}, 60, #{plateId}, 
      #{details,jdbcType=VARCHAR}, NOW())
  </insert>
  <insert id="insertSelective" parameterType="com.zenq.ssm.entity.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="plateId != null">
        plate_id,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="plateId != null">
        #{plateId,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zenq.ssm.entity.Blog">
    update blog
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="plateId != null">
        plate_id = #{plateId,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zenq.ssm.entity.Blog">
    update blog
    set id = #{id,jdbcType=INTEGER},
      plate_id = #{plateId,jdbcType=INTEGER},
      details = #{details,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
</mapper>